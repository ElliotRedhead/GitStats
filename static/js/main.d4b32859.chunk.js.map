{"version":3,"sources":["utilities/ScrollVh.js","components/fetch.js","App.js","index.js"],"names":["ScrollVh","window","scrollTo","top","innerHeight","behavior","GitCommits","useState","githubUserInput","setGithubUserInput","repoOptions","setRepoOptions","selectedRepo","setSelectedRepo","branchOptions","setBranchOptions","selectedBranch","setSelectedBranch","fetchErrorText","setFetchErrorText","repoCommits","setCommits","resetStates","userReset","repoOptionsReset","repoSelectedReset","branchOptionsReset","branchSelectedReset","fetchErrorReset","commitsReset","Grid","container","direction","alignItems","item","xs","md","lg","justify","style","minHeight","Paper","elevation","paddingTop","paddingBottom","minWidth","spacing","textAlign","sm","TextField","required","error","type","label","variant","value","onChange","event","target","Button","disabled","color","onClick","fetch","then","response","ok","status","handleFetchResponse","json","results","Select","MenuItem","map","data","index","key","name","forEach","latestCommitSha","commit","sha","commitsList","oldestCommitShas","commitObjects","push","oldestCommitIndex","length","oldestCommitSha","nextPageCommitFetch","shift","Card","raised","marginTop","padding","width","message","App","path","render","document","getElementById"],"mappings":"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","file":"static/js/main.d4b32859.chunk.js","sourcesContent":["// This can be expanded to utilise the useRef hook and then scroll to a target element based on vertical offset.\nconst ScrollVh = () => {\n  window.scrollTo({ top:window.innerHeight, behavior:\"smooth\" });\n};\n\nexport default ScrollVh;","import React, {useState} from \"react\";\nimport { TextField, Button, Select, MenuItem, Grid, Paper, Card } from \"@material-ui/core\";\nimport ScrollVh from \"../utilities/ScrollVh\";\nimport \"../styles/main.scss\";\n\nconst GitCommits = () => {\n\n  const [githubUserInput, setGithubUserInput] = useState(\"ElliotRedhead\");\n  \n  const [repoOptions, setRepoOptions] = useState();\n  const [selectedRepo, setSelectedRepo] = useState();\n  \n  const [branchOptions, setBranchOptions] = useState();\n  const [selectedBranch, setSelectedBranch] = useState();\n\n  const [fetchErrorText, setFetchErrorText] = useState();\n  \n  const [repoCommits, setCommits] = useState();\n\n  const resetStates = (userReset=false, repoOptionsReset=false, repoSelectedReset=false, branchOptionsReset=false, branchSelectedReset=false, fetchErrorReset=false, commitsReset=false ) => {\n    if(userReset){setGithubUserInput(\"ElliotRedhead\");}\n    if(repoOptionsReset){setRepoOptions();}\n    if(repoSelectedReset){setSelectedRepo();}\n    if(branchOptionsReset){setBranchOptions();}\n    if(branchSelectedReset){setSelectedBranch();}\n    if(fetchErrorReset){setFetchErrorText();}\n    if(commitsReset){setCommits();}\n  };\n\n  const handleFetchResponse = (response) => {\n    if (response.status === 403){setFetchErrorText(\"Rate limit for GitHub API has been exceeded, please try again later.\");\n    } else if (response.status === 404){setFetchErrorText(\"Selected credentials did not match an entry on GitHub.\");\n    } else {setFetchErrorText(\"A connection error occurred, try again later.\");}\n  };\n\n  const githubUserFetch = () => {\n    fetch(`https://api.github.com/users/${githubUserInput}/repos`)\n      .then(response => {\n        if (!response.ok) {handleFetchResponse(response);\n        } else {\n          return response;\n          \n        }\n      })\n      .then(response =>{ if(response){return response.json();}})\n      .then(\n        (results) => {\n          setRepoOptions(results);\n        }\n      );\n  };\n\n  const repoBranchFetch = () => {\n    fetch(`https://api.github.com/repos/${githubUserInput}/${selectedRepo}/branches?per_page=100`)\n      .then(response => response.json())\n      .then(\n        (results) => {\n          setBranchOptions(results);\n        }\n      );\n  };\n\n  const branchCommitFetch = () => {\n    branchOptions.forEach((data) => {\n      const latestCommitSha = data.name === selectedBranch && data.commit.sha;\n      if (latestCommitSha) {\n        fetch(`https://api.github.com/repos/${githubUserInput}/${selectedRepo}/commits?per_page=100&sha=${latestCommitSha}`)\n          .then(response => response.json())\n          .then(\n            (results) => {\n              const commitsList = [];\n              const oldestCommitShas = [];\n              \n              let commitObjects = results;\n              commitsList.push(...commitObjects);\n              let oldestCommitIndex = commitObjects.length - 1;\n              let oldestCommitSha = (commitObjects[oldestCommitIndex]).sha;\n              oldestCommitShas.push(oldestCommitSha);\n              \n\n              const nextPageCommitFetch = () => {\n                oldestCommitSha = oldestCommitShas[oldestCommitShas.length-1];\n                \n                fetch(`https://api.github.com/repos/${githubUserInput}/${selectedRepo}/commits?per_page=100&sha=${oldestCommitSha}`)\n                  .then(response => response.json())\n                  .then(\n                    (results) => {\n                      commitObjects = results;\n                      oldestCommitIndex = commitObjects.length - 1;\n                      oldestCommitSha = (commitObjects[oldestCommitIndex]).sha;\n                      oldestCommitShas.push(oldestCommitSha);\n                      // console.log(results);\n                      if (oldestCommitShas[oldestCommitShas.length-1] !== oldestCommitShas[oldestCommitShas.length-2] || oldestCommitShas.length < 2) {\n                        // What would happen if repo has one page of commits equal to exactly 100?\n                        commitObjects.shift();\n                        commitsList.push(...commitObjects);\n                        nextPageCommitFetch();\n                      } else {\n                        setCommits(commitsList);\n                        ScrollVh();\n                      }\n                    }\n                  );\n              };\n              nextPageCommitFetch();\n            });\n      }\n    });\n  };\n\n  return (\n    <>\n      <Grid container\n        direction=\"column\"\n        alignItems=\"center\">\n        <Grid item container\n          xs={12} md={10} lg={8}\n          direction=\"column\"\n          alignItems=\"center\"\n          justify=\"center\"\n          style={{minHeight:\"100vh\"}}>\n          <Paper\n            elevation={10}\n            style={{\n              paddingTop: \"6rem\",\n              paddingBottom: \"6rem\",\n              minWidth:\"60vw\"}}\n          >\n            <Grid container\n              direction=\"column\"\n              spacing={8}\n              alignItems=\"center\"\n            >\n              <Grid item xs={12}>\n                <h1 style={{textAlign:\"center\"}}>GitStats - Commit Messages</h1>\n              </Grid>\n              <Grid item xs={12} sm={10} lg={8} container\n                alignItems=\"center\"\n                spacing={2}>\n                <Grid item xs={12} md={8}>\n                  <TextField\n                    required\n                    error={githubUserInput === \"\"}\n                    type=\"text\"\n                    label=\"GitHub Username\"\n                    variant=\"filled\"\n                    value={githubUserInput}\n                    onChange={(event) => {\n                      setGithubUserInput(event.target.value);\n                      resetStates(false,true,true,true,true,true,true);\n                    } }\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <Button\n                    disabled={!githubUserInput}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={githubUserFetch}>\n        Fetch Repos for User\n                  </Button>\n                </Grid>\n              </Grid>\n\n              {repoOptions ?\n                <>\n                  <Grid item xs={12} sm={10} lg={8} container\n                    alignItems=\"center\"\n                    spacing={2}>\n                    <Grid item xs={12} md={8}>\n                      <Select\n                        onChange={(event) => {\n                          setSelectedRepo(event.target.value);\n                          resetStates(false,false,false,true,true,true,true);}}\n                        value={selectedRepo ? selectedRepo : \"None\"}>\n                        <MenuItem value=\"None\" disabled>None</MenuItem>\n                        {repoOptions.map((data,index) => (\n                          <MenuItem key={index} value={data.name}>{data.name}</MenuItem>\n                        ))}\n                    \n                      </Select>\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                      <Button\n                        disabled={!selectedRepo}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={repoBranchFetch}>\n              Fetch Branches for Selected Repo\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </>\n                : null\n              }\n\n              {branchOptions ?\n                <>\n                  <Grid item xs={12} sm={10} lg={8} container\n                    alignItems=\"center\"\n                    spacing={2}>\n                    <Grid item xs={12} md={8}>\n                      <Select\n                        onChange={(event) => {\n                          setSelectedBranch(event.target.value);\n                          resetStates(false,false,false,false,false,true,true);}}\n                        value={selectedBranch ? selectedBranch : \"None\"}>\n                        <MenuItem value=\"None\" disabled>None</MenuItem>\n                        {branchOptions.map((data,index) => (\n                          <MenuItem key={index} value={data.name}>{data.name}</MenuItem>\n                        ))}\n                      </Select>\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                      <Button\n                        disabled={!selectedBranch}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={branchCommitFetch}>\n              Fetch Commits for Selected Branch\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </>\n                : null\n              }\n              {fetchErrorText ?\n                <Grid item xs={12}>\n                  <p style={{color:\"red\"}}>\n                    {fetchErrorText}\n                  </p>\n                </Grid>\n                : null\n              }\n            </Grid>\n          </Paper>\n        </Grid>\n        {repoCommits ?\n          <>\n            <Grid item container\n              xs={12} md={10} lg={8}\n              direction=\"column\"\n              alignItems=\"center\"\n              justify=\"center\"\n              style={{minHeight:\"100vh\"}}>\n              <Paper\n                elevation={10}\n                style={{minHeight:\"50vh\"}}>\n                <Grid container\n                  direction=\"column\"\n                  alignItems=\"center\"\n                  justify=\"center\">\n                  <Grid container item xs={10} md={8}>\n                    <h2>Total number of commits: {repoCommits.length}</h2>\n                    {repoCommits.map((data,index) => (\n                      <Card\n                        raised\n                        key={index}\n                        style={{\n                          marginTop:\"2rem\",\n                          padding:\"2rem 2rem\", \n                          width:\"100%\"}}>\n                        {data.commit.message}\n                      </Card>\n                    ))\n                    }\n                  </Grid>\n                </Grid>\n              </Paper>\n            </Grid>\n          </>\n          : null }\n      </Grid>\n\n    </>\n  );\n\n};\n\nexport default GitCommits;","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport GitCommits from \"./components/fetch\";\n\n\nconst App = () => {\n  \n  return (\n    <>\n      <Switch>\n        <Route path={\"/\"}>\n          <GitCommits />\n        </Route> \n      </Switch>\n    </>\n  );\n};\n\nexport default App;","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\n\nrender(<Router>\n  <App />\n</Router>,\ndocument.getElementById(\"root\")\n);"],"sourceRoot":""}